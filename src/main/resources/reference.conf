akka-kadmin {
  # Perform a best effort deduplication for operations that possibly are not idempotent, currently changePassword and addPrincipal.
  # AddPrincipal might not be idempontent because in some cases it calls changePassword.
  # What we mean by an operation not being idempotent is: executing it causes side-effects to be applied elsewhere
  # in such a way that executing the same operation with the same arguments again might produce a different result.
  #
  # The code ASSUMES there is only ONE kadmin actor interacting with kerberos.
  #
  # By best effort we mean that there is still a very small window in which duplication can still occur.
  # To understand it, we must first explain how the code operates:
  # The kadmin actor knows the last deliveryId it handled for a given sender.
  # When a new message arrives it will check its deliveryId against the expectedId of that sender.
  #  If (deliveryId > expectedId) then
  #    the message is a future one and there are unprocessed messages in between, so the actor will ignore it.
  #  If (deliveryId < expectedId) then
  #    the message is a resend, the actor will just respond with its result.
  #    This result was stored when the message side-effect was performed.
  #    This means we won't perform the side-effect twice since we just send the previously computed result.
  #  If (deliveryId == expected id) then
  #    this is the message we are expecting, so we will perform the side-effect the following way:
  #      1) store IN MEMORY that we started performing the side-effect.
  #      2) perform the side-effect.
  #      3) persist the side-effect result, and then in the persist handler update the actor internal state
  #         with the result (this allows us to just send the result when we get a resend).
  #
  # If the actor crashes:
  #  · after performing the side-effect
  #  · but before persisting its result
  # duplication will occur. Since in the recovery the actor won't know that it already performed the side-effect.
  # This is also true if we persisted that we started executing the side-effect.
  #
  # Setting this to true implies that the kadmin actor will create a persistent actor.
  # Which means you have to configure the journal for it.
  perform-best-effort-deduplication = false
}