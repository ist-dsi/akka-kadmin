akka-kadmin {
  kadmin {
    realm = "EXAMPLE.COM"
    principal = "kadmin/admin"
    password = "MITiys4K5"

    scala-expect {
      timeout = 5 seconds
    }
  }
  remove-delay = 0 seconds
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  #logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "OFF"

  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  log-config-on-start = off

  actor {
    debug {
      # enable function of LoggingReceive, which is to log any received message
      # at DEBUG level, see the “Testing Actor Systems” section of the Akka
      # Documentation at http://akka.io/docs
      receive = off
      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
      autoreceive = off
      # enable DEBUG logging of actor lifecycle changes
      lifecycle = off
      # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
      fsm = off
      # enable DEBUG logging of subscription changes on the eventStream
      event-stream = off
      # enable DEBUG logging of unhandled messages
      unhandled = off
      # enable WARN logging of misconfigured routers
      router-misconfiguration = off
    }
  }
  persistence {
    journal {
      plugin = "akka.persistence.journal.leveldb"
      leveldb {
        class = "akka.persistence.journal.leveldb.LeveldbJournal"
        plugin-dispatcher = "akka.persistence.dispatchers.default-plugin-dispatcher"
        replay-dispatcher = "akka.persistence.dispatchers.default-replay-dispatcher"
        # Storage location of LevelDB files.
        dir = "/var/cache/dsi-panel/journals"
      }
    }
    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      local {
        class = "akka.persistence.snapshot.local.LocalSnapshotStore"
        plugin-dispatcher = "akka.persistence.dispatchers.default-plugin-dispatcher"
        stream-dispatcher = "akka.persistence.dispatchers.default-stream-dispatcher"
        dir = "/var/cache/dsi-panel/snapshots"
      }
    }
  }
}